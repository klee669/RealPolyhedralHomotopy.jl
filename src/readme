include("certify_patchwork");
include("generate_binomials");
include("rph_track");
n=2;
d=2;

# A random system of degree d polynomials in n unknowns is generated
@var x[1:n]
X = DynamicPolynomials.monomials(x, 2);
a = randn(n, length(X));
F_eqs = a*X;

# System is a HomotopyContinuation.jl function that ?????
F = System(F_eqs);

#
B = generate_binomials(F)

# Tracks the the real solutions.
realSols = rph_track(B,F)

# Returns 1 if certified, 0 otherwise.
result = certify_patchwork(F)
